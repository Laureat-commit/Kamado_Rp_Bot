const mongoose = require('mongoose');
const config = require('../config');

// D√©finir le sch√©ma pour les joueurs (characters)
const playerSchema = new mongoose.Schema({
    name: { type: String, required: true },
    level: { type: Number, default: 1 }, // Niveau du joueur
    grade: { type: String, required: true }, // Grade du joueur (ex: novice, expert)
    title: { type: String, default: 'Aventurier' }, // Titre du joueur
    card: { type: String, default: 'Standard' }, // Type de carte (joueur peut avoir des cartes sp√©ciales)
    stuff: { type: String, default: 'Basic' }, // √âquipement (stuff) du joueur
    pocket: { type: Array, default: [] }, // Objets dans la poche du joueur
    plays: { type: Number, default: 0 }, // Nombre de parties jou√©es
    wins: { type: Number, default: 0 }, // Victoires
    losses: { type: Number, default: 0 }, // D√©faites
    draws: { type: Number, default: 0 }, // Matchs nuls
    exp: { type: Number, default: 0 }, // Points d'exp√©rience
    avatar: { type: String, default: 'https://default-avatar-url.jpg' }, // Image de profil du joueur
});

// Cr√©er le mod√®le Player (Personnage)
const Player = mongoose.model('Player', playerSchema);

// Fonction de connexion √† MongoDB
const connectDB = async () => {
    try {
        await mongoose.connect(config.MONGODB, {
            useNewUrlParser: true,
            useUnifiedTopology: true
        });
        console.log('üõú MongoDB Connected ‚úÖ');
    } catch (err) {
        console.error(err.message);
        process.exit(1);
    }
};

// Fonction pour ajouter un nouveau joueur
const addPlayer = async (name, grade, avatar = 'https://default-avatar-url.jpg') => {
    try {
        const newPlayer = new Player({
            name,
            level: 1, // Par d√©faut, chaque joueur commence au niveau 1
            grade,
            title: 'Aventurier', // Titre par d√©faut
            card: 'Standard', // Carte par d√©faut
            stuff: 'Basic', // √âquipement de base
            pocket: [], // Poche vide au d√©part
            plays: 0,
            wins: 0,
            losses: 0,
            draws: 0,
            exp: 0, // Exp√©rience initiale √† 0
            avatar // Image de profil
        });

        await newPlayer.save();
        console.log(`‚úÖ Player added: ${name}`);
    } catch (error) {
        console.error(`‚ùå Failed to add player: ${error.message}`);
    }
};

// Exports pour utilisation dans d'autres fichiers
module.exports = { connectDB, playersdb };
